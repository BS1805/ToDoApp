@model ToDoApp.Models.ViewModels.PagedListViewModel<ToDoApp.Models.ViewModels.TaskViewModel>


@{
    ViewData["Title"] = "Your To-Do List";
}

<style>
    .task-card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
        border: none;
        border-radius: 15px;
        overflow: hidden;
        width: 100%;
    }

        .task-card:hover {
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.18);
        }

    .card-header {
        background-color: #d6eaf8;
        border-bottom: none;
        padding: 1.0rem;
    }

    .card-title {
        font-size: 1rem;
        font-weight: bold;
    }

    .card-body {
        padding: 1rem;
    }

    .card-text {
        font-size: 0.85rem;
        margin-bottom: 0.5rem;
    }

    .badge {
        font-size: 0.7rem;
        padding: 0.3rem 0.6rem;
        border-radius: 2rem;
    }

    .btn-details, .btn-edit, .btn-success, .btn-danger {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
    }

    .card-footer {
        background-color: #f8f9fa;
        border-top: 1px solid rgba(0,0,0,.05);
        padding: 0.75rem 1rem;
    }

    .container {
        max-width: 1200px;
        margin-bottom: 50px;
    }

    .task-icon {
        font-size: 3rem;
        color: #6c757d;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .complete-task-btn {
        cursor: pointer;
        background: none;
        border: none;
        color: #6c757d;
        transition: color 0.3s ease;
    }

        .complete-task-btn:hover {
            color: #28a745;
        }

    .pagination {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-top: 30px;
    }

    .pagination-item {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        border: 1px solid #e5e5e5;
        background-color: white;
        color: #333;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
    }

        .pagination-item:hover {
            background-color: #f5f5f5;
        }

        .pagination-item.active {
            background-color: #ff9966;
            color: white;
            border-color: #ff9966;
        }

        .pagination-item.disabled {
            opacity: 0.5;
            pointer-events: none;
        }

    /* Mobile responsive improvements */
    @@media (max-width: 767.98px) {
        .card-title

    {
        font-size: 0.95rem;
    }

    .card-text {
        font-size: 0.8rem;
        margin-bottom: 0.4rem;
    }

    .card-footer .btn {
        font-size: 0.75rem;
        padding: 0.3rem 0.6rem;
    }

    .card-footer {
        padding: 0.75rem;
    }

    .card-body {
        padding: 0.75rem;
    }

    }
</style>

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Your To-Do List</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Create New Task
        </a>
    </div>

    <div class="row">
        @foreach (var item in Model.Items)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mb-3">
                <div class="task-card mx-auto">
                    <div class="card-header">
                        <h5 class="card-title d-flex justify-content-between align-items-center">
                            <span>@item.Title</span>
                            <a class="text-decoration-none text-secondary" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i> Edit</a>
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 col-sm-12 mb-md-0 mb-3">
                                <div class="task-icon">
                                    <i class="bi bi-clipboard-check"></i>
                                </div>
                            </div>
                            <div class="col-md-9 col-sm-12">
                                <p class="card-text">@item.Description</p>
                                <p class="card-text">
                                    <b>Status: </b>
                                    @if (item.IsCompleted)
                                    {
                                        <span class="badge bg-success text-white">COMPLETED</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary text-white">PENDING</span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex flex-wrap justify-content-between align-items-center gap-2">
                            <a class="btn btn-outline-primary btn-details" asp-action="Details" asp-route-id="@item.Id">
                                <i class="bi bi-eye-fill"></i> Show Details
                            </a>

                            <a class="btn btn-danger text-white" asp-action="Delete" asp-route-id="@item.Id">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

   <div class="container">
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
          
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize">
                    <i class="bi bi-chevron-left"></i>
                </a>
            </li>

           
            @if (Model.TotalPages > 0)
            {
                int startPage = Math.Max(1, Model.PageIndex - 1);
                int endPage = Math.Min(Model.TotalPages, Model.PageIndex + 1);

                for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">
                            @i
                        </a>
                    </li>
                }
            }

            
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize">
                    <i class="bi bi-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>


</div>